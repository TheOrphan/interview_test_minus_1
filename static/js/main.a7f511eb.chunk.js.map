{"version":3,"sources":["components/searchInput/categories.jsx","components/searchInput/deliveryTime.jsx","components/searchInput/index.js","components/content/index.js","utils/useFetchData.js","App.js","serviceWorker.js","index.js"],"names":["SHOW_PARENT","TreeSelect","SelectCategories","categoryList","categoriesChange","treeData","map","item","index","push","title","value","key","tProps","treeCheckable","showCheckedStrategy","searchPlaceholder","style","width","onChange","Option","Select","DeliveryTime","delivery","deliveryChange","mode","allowClear","placeholder","SearchForm","isLoading","products","furniture_styles","searchChange","Fragment","gutter","marginBottom","span","size","className","color","backgroundColor","border","borderRadius","borderBottom","padding","fontSize","Content","loading","cardStyle","minHeight","price","textAlign","marginTop","fontWeight","desc","textOverflow","textIndent","lineHeight","footer","position","bottom","furniture_style","textTransform","fontStyle","paddingRight","letterSpacing","delivery_style","textDecoration","length","p","i","bordered","name","displayType","thousandSeparator","decimalSeparator","prefix","description","paddingBottom","delivery_time","optSelect","fetchReducer","state","action","type","isError","field","payload","allProducts","search","dTime","category","data","isEmpty","filter","Error","URL","API","input","arrData","aWeek","twoWeeks","aMonth","more","toString","includes","toLowerCase","App","useReducer","dispatch","useEffect","didCancel","a","axios","post","result","getData","useFetchData","e","target","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a7f511eb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { TreeSelect } from \"antd\";\r\n\r\nconst { SHOW_PARENT } = TreeSelect;\r\n\r\nfunction SelectCategories({ categoryList, categoriesChange }) {\r\n  const treeData = [];\r\n  if (categoryList) {\r\n    categoryList.map((item, index) => {\r\n      treeData.push({\r\n        title: item,\r\n        value: item,\r\n        key: index\r\n      });\r\n      return false;\r\n    });\r\n  }\r\n  const tProps = {\r\n    treeData,\r\n    treeCheckable: true,\r\n    showCheckedStrategy: SHOW_PARENT,\r\n    searchPlaceholder: \"Furniture Style\",\r\n    style: {\r\n      width: \"100%\"\r\n    }\r\n  };\r\n  return <TreeSelect {...tProps} onChange={categoriesChange} />;\r\n}\r\n\r\nexport default SelectCategories;\r\n","import React from \"react\";\r\nimport { Select } from \"antd\";\r\nconst { Option } = Select;\r\nexport default function DeliveryTime({ delivery, deliveryChange }) {\r\n  return (\r\n    <Select\r\n      mode=\"multiple\"\r\n      allowClear={true}\r\n      placeholder=\"Delivery Time\"\r\n      style={{ width: \"100%\" }}\r\n      onChange={deliveryChange}\r\n    >\r\n      {delivery\r\n        ? delivery.map((item, index) => (\r\n            <Option key={index} value={`${item}`}>\r\n              {item}\r\n            </Option>\r\n          ))\r\n        : []}\r\n    </Select>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Row, Col, Input } from \"antd\";\r\nimport Categories from \"./categories\";\r\nimport DeliveryTime from \"./deliveryTime\";\r\nexport default function SearchForm({\r\n  isLoading,\r\n  products,\r\n  furniture_styles,\r\n  searchChange,\r\n  categoriesChange,\r\n  deliveryChange,\r\n  delivery\r\n}) {\r\n  const searchStyle = {\r\n    color: \"#ffffff\",\r\n    backgroundColor: \"transparent\",\r\n    border: \"0px\",\r\n    borderRadius: \"0px\",\r\n    borderBottom: \"1px #ffffff solid\",\r\n    padding: \"1rem 3rem 1.2rem 0.5rem\",\r\n    fontSize: \"1.2rem\"\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Row gutter={48} style={{ marginBottom: \"1rem\" }}>\r\n        <Col span={12}>\r\n          <Input\r\n            size={\"small\"}\r\n            className=\"search-input\"\r\n            placeholder=\"Search Furniture\"\r\n            style={searchStyle}\r\n            onChange={searchChange}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={48}>\r\n        <Col span={12}>\r\n          <Categories\r\n            categoryList={furniture_styles}\r\n            categoriesChange={categoriesChange}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <DeliveryTime delivery={delivery} deliveryChange={deliveryChange} />\r\n        </Col>\r\n      </Row>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { Row, Col, Card } from \"antd\";\r\nexport default function Content({ products, loading }) {\r\n  const cardStyle = {\r\n    width: \"100%\",\r\n    marginBottom: \"2rem\",\r\n    minHeight: \"18rem\"\r\n  };\r\n  const price = {\r\n    textAlign: \"right\",\r\n    marginTop: \"0.8rem\",\r\n    color: \"orange\",\r\n    fontWeight: \"bold\",\r\n    fontSize: \"1.2rem\"\r\n  };\r\n  const desc = {\r\n    textOverflow: \"ellipsis\",\r\n    textIndent: \"1rem\",\r\n    textAlign: \"justify\",\r\n    lineHeight: \"1.3rem\"\r\n  };\r\n  const footer = {\r\n    width: \"calc(100% - 3rem)\",\r\n    position: \"absolute\",\r\n    bottom: \".5rem\"\r\n  };\r\n  const furniture_style = {\r\n    color: \"cornflowerblue\",\r\n    textTransform: \"uppercase\",\r\n    fontSize: \".75rem\",\r\n    fontStyle: \"italic\",\r\n    paddingRight: \".5rem\",\r\n    letterSpacing: \".1rem\"\r\n  };\r\n  const delivery_style = {\r\n    textDecoration: \"underline\",\r\n    textAlign: \"right\",\r\n    fontSize: \"1rem\",\r\n    fontWeight: \"bold\",\r\n    color: \"darkblue\"\r\n  };\r\n  return products && products.length > 0\r\n    ? products.map((p, i) => (\r\n        <Col key={i} span={12}>\r\n          <Card loading={loading} bordered={false} style={cardStyle}>\r\n            <Row>\r\n              <Col span={18}>\r\n                <h1>{p.name}</h1>\r\n              </Col>\r\n              <Col span={6}>\r\n                <p style={price}>\r\n                  <CurrencyFormat\r\n                    value={p.price}\r\n                    displayType={\"text\"}\r\n                    thousandSeparator={\".\"}\r\n                    decimalSeparator={\",\"}\r\n                    prefix={\"IDR \"}\r\n                  />\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <p style={desc}>{p.description}</p>\r\n            </Row>\r\n            <Row style={footer}>\r\n              <Row style={{ paddingBottom: \"1rem\" }}>\r\n                {p.furniture_style.map(i => (\r\n                  <span key={i} style={furniture_style}>\r\n                    {i}{\" \"}\r\n                  </span>\r\n                ))}\r\n              </Row>\r\n              <Row style={delivery_style}>\r\n                <p>{p.delivery_time} Days</p>\r\n              </Row>\r\n            </Row>\r\n          </Card>\r\n        </Col>\r\n      ))\r\n    : [1, 2, 3, 4, 5, 6].map(i => (\r\n        <Col key={i} span={12}>\r\n          <Card loading={true} bordered={false} style={cardStyle} />\r\n        </Col>\r\n      ));\r\n}\r\n","import { useReducer, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nconst optSelect = [\"1 week\", \"2 weeks\", \"1 month\", \"more\"];\r\n// ===== USE REDUCER ==========\r\nfunction fetchReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"FETCH_INIT\":\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: false\r\n      };\r\n    case \"FETCH_SUCCESS\":\r\n      // set delivery based on response data's delivery time\r\n      // let delivery = action.payload.products\r\n      //   .map((item, index) => parseInt(item.delivery_time))\r\n      //   .sort(function(a, b) {\r\n      //     return a - b;\r\n      //   });\r\n      // if (delivery) delivery = [...new Set(delivery)];\r\n      return {\r\n        ...state,\r\n        field: \"field\",\r\n        isLoading: false,\r\n        isError: false,\r\n        furniture_styles: action.payload.furniture_styles,\r\n        products: action.payload.products,\r\n        allProducts: action.payload.products,\r\n        search: \"\",\r\n        dTime: [],\r\n        category: [],\r\n        delivery: optSelect\r\n      };\r\n    case \"FETCH_FILTER\":\r\n      let data = [];\r\n      let products = [];\r\n      const isEmpty =\r\n        action.filter === \"\" || action.filter.length === 0 ? true : false;\r\n      if (state.field === action.field) {\r\n        data = state.allProducts;\r\n      } else {\r\n        data = state.products;\r\n      }\r\n      const search = action.field === \"search\" ? action.filter : state.search;\r\n      const dTime = action.field === \"delivery\" ? action.filter : state.dTime;\r\n      const category =\r\n        action.field === \"category\" ? action.filter : state.category;\r\n      if (action.filter === \"\" || action.filter.length === 0) {\r\n        products = state.allProducts;\r\n      } else {\r\n        products = filter(action.filter, data);\r\n      }\r\n      if (state.search !== \"\" && isEmpty && action.field !== \"search\") {\r\n        products = filter(state.search, state.allProducts);\r\n      }\r\n      if (state.category.length > 0 && isEmpty && action.field !== \"category\") {\r\n        products = filter(state.category, state.allProducts);\r\n      }\r\n      if (state.dTime.length > 0 && isEmpty && action.field !== \"delivery\") {\r\n        products = filter(state.dTime, state.allProducts);\r\n      }\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        search: search,\r\n        dTime: dTime,\r\n        category: category,\r\n        field: action.field,\r\n        isError: false,\r\n        products: products\r\n      };\r\n    case \"FETCH_FAILURE\":\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: true\r\n      };\r\n    default:\r\n      throw new Error();\r\n  }\r\n}\r\n\r\nconst URL = \"https://www.mocky.io/v2/\";\r\nconst API = \"5c9105cb330000112b649af8\";\r\n\r\nexport default function useFetchData() {\r\n  const [state, dispatch] = useReducer(fetchReducer, {\r\n    isLoading: true,\r\n    isError: false\r\n  });\r\n  useEffect(() => {\r\n    let didCancel = false;\r\n    async function getData() {\r\n      dispatch({ type: \"FETCH_INIT\" });\r\n\r\n      try {\r\n        const result = await axios.post(URL + API);\r\n\r\n        if (!didCancel) {\r\n          dispatch({ type: \"FETCH_SUCCESS\", payload: result.data });\r\n        }\r\n      } catch (error) {\r\n        if (!didCancel) {\r\n          dispatch({ type: \"FETCH_FAILURE\" });\r\n        }\r\n      }\r\n    }\r\n\r\n    if (API !== \"\") {\r\n      getData();\r\n    }\r\n\r\n    return () => {\r\n      didCancel = true;\r\n    };\r\n  }, []);\r\n\r\n  return [state, dispatch];\r\n}\r\n\r\nfunction filter(input, products) {\r\n  const searchedData = products.filter(arrData => {\r\n    let aWeek, twoWeeks, aMonth, more;\r\n    if (input.toString().includes(\"1 week\")) {\r\n      aWeek = arrData.delivery_time >= 1 && arrData.delivery_time <= 7;\r\n    }\r\n    if (input.toString().includes(\"2 weeks\")) {\r\n      twoWeeks = arrData.delivery_time > 7 && arrData.delivery_time <= 14;\r\n    }\r\n    if (input.toString().includes(\"1 month\")) {\r\n      aMonth = arrData.delivery_time > 14 && arrData.delivery_time <= 30;\r\n    }\r\n    if (input.toString().includes(\"more\")) {\r\n      more = arrData.delivery_time > 30;\r\n    }\r\n    return (\r\n      arrData.furniture_style\r\n        .toString()\r\n        .toLowerCase()\r\n        .includes(input.toString().toLowerCase()) ||\r\n      arrData.name.toLowerCase().includes(input.toString().toLowerCase()) ||\r\n      aWeek ||\r\n      twoWeeks ||\r\n      aMonth ||\r\n      more\r\n    );\r\n  });\r\n\r\n  return searchedData;\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport SearchInput from \"./components/searchInput\";\r\nimport Content from \"./components/content\";\r\nimport { Row } from \"antd\";\r\nimport useFetchData from \"./utils/useFetchData\";\r\n\r\nfunction App() {\r\n  const [\r\n    { products, delivery, furniture_styles, isLoading },\r\n    dispatch\r\n  ] = useFetchData();\r\n  function searchChange(e) {\r\n    dispatch({ type: \"FETCH_FILTER\", filter: e.target.value, field: \"search\" });\r\n  }\r\n  function categoriesChange(value) {\r\n    dispatch({ type: \"FETCH_FILTER\", filter: value, field: \"category\" });\r\n  }\r\n  function deliveryChange(value) {\r\n    dispatch({ type: \"FETCH_FILTER\", filter: value, field: \"delivery\" });\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <SearchInput\r\n          products={products}\r\n          furniture_styles={furniture_styles}\r\n          categoriesChange={categoriesChange}\r\n          deliveryChange={deliveryChange}\r\n          searchChange={searchChange}\r\n          delivery={delivery}\r\n        />\r\n      </header>\r\n      <content className=\"App-body\">\r\n        <Row gutter={48}>\r\n          <Content products={products} loading={isLoading} />\r\n        </Row>\r\n      </content>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}